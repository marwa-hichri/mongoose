port = 3030
 MONGO_URI= mongodb+srv://Hichri-marwa:tahakhalil123@persons.raskzkt.mongodb.net/Restaurant


 const people =[{
    name:"taha",
    age:8,
    favoriteFoods:["soupe","chiken"]
},
{
    name:"taha",
    age:40,
    favoriteFoods:["pizza","chiken","burritos"]
},
{
    name:"ahmed ",
    age:12,
    favoriteFoods:["crepe","pasta","soupe"]
},
{
    name:"jamil",
    age:32,
    favoriteFoods:["salade","zpaghetti","jfishuic"]
}
]
person.create(people)
//Use model.find() to Search Your Database
const findPerson = async (person) =>{
    try{ 
        const result = await person.find({name:person})
        console.log(result);

    } 
    catch (err){
        console.log(err.message)
    }

};
findPerson("taha");
//Use model.findOne() to Return a Single Matching Document from Your Database
const findonePerson = async (food) =>{
    try{ 
        const result = await person.find({favoriteFoods:food})
        console.log(result);

    } 
    catch (err){
        console.log(err.message)
    }

};
findonePerson("fish");
//Use model.findById() to Search Your Database By _id
const findIdPerson = async (personId) =>{
    try{ 
        const result = await person.find({_id:personId})
        console.log(result);

    } 
    catch (err){
        console.log(err.message)
    }

};
findIdPerson("id");

//Perform Classic Updates by Running Find, Edit, then Save
const updateFood = async (food) =>{
    try{ 
        const result = await person.findById({_id:id});
        result.favoriteFoods.push(food);
        await result.save();
        console.log(result);

    } 
    catch (err){
        console.log(err.message)
    }

};
updateFood("id","hamburger")



//Perform New Updates on a Document Using model.findOneAndUpdate()
const updateAge = async (name,age) =>{
    try{ 
        const result = await person.findOneAndUpdate(
            {name},
            {age},
            {new:true}
            );
            await result.save();
        console.log(result);

    } 
    catch (err){
        console.log(err.message)
    }

};
findonePerson("manel","20");


const createPerson = async () => {
    const person = await Person.create({
        name: "Dingus", 
        age: 18,
        favoriteFoods: ["pizza", "lazania", "pancake"]
    });
    try{const result =await person.save();
        console.log(result);

    }
    catch (err) {
        console.log(err.message);
      }
    };

